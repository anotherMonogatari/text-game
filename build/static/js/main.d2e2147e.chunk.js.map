{"version":3,"sources":["App.js","serviceWorker.js","reducers/reducer.js","index.js"],"names":["connect","state","dispatch","attackHandler","type","restartHandler","thunderHandler","armorHandler","healHandler","powerHandler","props","react_default","a","createElement","style","textAlign","you","hp","enemy","className","wound","color","armorCD","armor","powerCD","power","onClick","disabled","thunderCD","healCD","Boolean","window","location","hostname","match","initState","turn","reducer","arguments","length","undefined","action","minEnemyAttack","maxEnemyAttack","minYouAttack","maxYouAttack","attackRandom","min","max","Math","round","random","yourAttack","enemyAttack","yourHeal","thunderAttack","Object","objectSpread","document","reload","createStore","ReactDOM","render","es","store","src_App","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.d2e2147e.chunk.js","sourcesContent":["import React from 'react';\n\nimport {connect} from 'react-redux';\n\nimport './styles/style.css';\n\nconst App = (props) => {\n  // Displaying stats while HP != 0 and fight result when HP < 0\n  // also signaling when buffs are active\n    return <section>\n      <div style={{textAlign: 'center'}}>\n      {(props.you.hp > 0 && props.enemy.hp > 0) && <div>\n        <div className='flex'>\n          <div className='player'><p>You</p>\n        <p>❤ {props.you.hp} <span\n          style={(props.you.wound > 0) ? {color: 'red'} : {color: 'green'}}>\n            {(props.you.wound !== 0) && -props.you.wound}</span></p>\n\n        <p>\n          <span className={(props.you.armorCD >= 5) && 'activeBuff'} >⛊</span> {props.you.armor}</p>\n\n        <p>\n           <span className={(props.you.powerCD >= 5) && 'activeBuff'} >⚔</span> {props.you.power}</p></div>\n\n        <span className='vs'>VS</span>\n\n        <div className='player'><p>Enemy</p>\n        <p>❤ {props.enemy.hp} <span \n          style={{color: 'red'}}>{(props.enemy.wound !== 0) && -props.enemy.wound}</span></p>\n        <p>⛊ {props.enemy.armor}</p>\n        <p>⚔ {props.enemy.power}</p></div>\n        </div> \n        \n\n        <button className='button' onClick={props.attackHandler}>Attack</button>\n\n        <button className='button' onClick={props.thunderHandler} disabled={(props.you.thunderCD <= 0) ? false : true}>\n          Thunder Strike {(props.you.thunderCD > 0) && <span>({props.you.thunderCD})</span>}</button>\n\n        <button className='button' onClick={props.healHandler} disabled={(props.you.healCD <= 0) ? false : true}>\n          Heal Up {(props.you.healCD > 0) && <span>({props.you.healCD})</span>}</button>\n\n        <button className={(props.you.powerCD >= 5) ? 'button button-active' : 'button'} onClick={props.powerHandler} \n        disabled={(props.you.powerCD <= 0) ? false : true} \n         >\n          Power Up {(props.you.powerCD > 0) && <span>({props.you.powerCD})</span>}</button>\n\n        <button className={(props.you.armorCD >= 5) ? 'button button-active' : 'button'} onClick={props.armorHandler} \n        disabled={(props.you.armorCD <= 0) ? false : true}\n        >\n        Armor Up {(props.you.armorCD > 0) && <span>({props.you.armorCD})</span> }</button>\n      </div>}\n\n\n     {(props.enemy.hp <= 0 && props.you.hp <= 0) && <p className='result'>Draw <br/><span className='hint'>\n        Almost won. Want to try again?</span></p>} \n      {(props.you.hp <= 0 && props.enemy.hp > 0) && <p className='result'>You lost <br/><span className='hint'>\n        Next time try this OP combos: Power Up + Thunder Strike and Power Up + Heal Up</span></p>}\n      {(props.enemy.hp <= 0 && props.you.hp > 0) && <p className='result'>You won <br/><span className='hint'>\n        Looks like we have a God Gamer here</span></p>}\n    \n      <button className='button button-restart' onClick={props.restartHandler}>Restart</button>\n\n\n      </div>\n    </section>\n}\n\nconst mapStateToProps = (state) => {\n  return state\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    attackHandler: () => dispatch({type: 'ATTACK'}),\n    restartHandler: () => dispatch({type: 'RESTART'}),\n    thunderHandler: () => dispatch({type: 'THUNDER'}),\n    armorHandler: () => dispatch({type: 'ARMOR'}),\n    healHandler: () => dispatch({type: 'HEAL'}),\n    powerHandler: () => dispatch({type: 'POWER'})\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","// Characters stats\r\nconst initState = {\r\n    turn: 0,\r\n    you: {\r\n      hp: 1500,\r\n      power: 100,\r\n      armor: 10,\r\n      wound: 0,\r\n      thunderCD: 0,\r\n      healCD: 0,\r\n      armorCD: 0,\r\n      powerCD: 0\r\n    },\r\n    enemy: {\r\n      hp: 5000,\r\n      power: 120,\r\n      armor: 40,\r\n      wound: 0\r\n    }\r\n  }\r\n\r\nconst reducer = (state = initState, action) => {\r\n    // Randomazing attack\r\n    const minEnemyAttack = state.enemy.power * 0.9;\r\n    const maxEnemyAttack = state.enemy.power * 1.1;\r\n    const minYouAttack = state.you.power * 0.9;\r\n    const maxYouAttack = state.you.power * 1.1;\r\n    const attackRandom = (min, max) => {\r\n        return Math.round(Math.random() * (max - min + 1) ) + min;\r\n      }\r\n      // Calculating damage reduction by armor\r\n    const yourAttack = attackRandom(minYouAttack, maxYouAttack) - state.enemy.armor;\r\n    const enemyAttack = attackRandom(minEnemyAttack, maxEnemyAttack) - state.you.armor;\r\n\r\n    const yourHeal = attackRandom(minYouAttack, maxYouAttack);\r\n    // here you can change ballance of your abilities\r\n    const healMultiplier = 2;\r\n    const healTimeOut = 4;\r\n\r\n    const thunderMultiplier = 4;\r\n    const thunderAttack = (yourAttack + state.enemy.armor) * thunderMultiplier - state.enemy.armor;\r\n    const thunderTimeOut = 3;\r\n\r\n    const armorBonus = 40;\r\n    const armorDuration = 5;\r\n    const armorTimeOut = 10;\r\n    const powerBonus = 100;\r\n    const powerDuration = 5;\r\n    const powerTimeOut = 10;\r\n\r\n    if (action.type === 'ATTACK') {\r\n          // Changing HP of characters and writing wounds they got\r\n          // attack decrease abilities CDs by 1 (if CD <= 0 you can use it again)\r\n          // when using some ability it also decrease CD of other abilities by 1\r\n            // Basic attack\r\n            return {\r\n            turn: state.turn + 1,\r\n            you: {\r\n              ...state.you,\r\n              // Returning initial armor after 5 turns\r\n              // in the turn when armor up ends change your armor              \r\n            hp: (() => {\r\n              if (state.you.armorCD === armorDuration) {return state.you.hp - enemyAttack - armorBonus}\r\n              else {return state.you.hp - enemyAttack}\r\n            })(),\r\n            armor: (() => {\r\n              if (state.you.armorCD === armorDuration) {return initState.you.armor}\r\n              else {return state.you.armor}\r\n            })(),\r\n            wound: (() => {\r\n              if (state.you.armorCD === armorDuration) {return enemyAttack + armorBonus}\r\n              else {return enemyAttack}\r\n            })(),\r\n            // Returning initial power after 5 turns\r\n            power: (() => {\r\n              if (state.you.powerCD === powerDuration) {return initState.you.power}\r\n              else {return state.you.power}\r\n            })(),\r\n            thunderCD: state.you.thunderCD - 1,\r\n            healCD: state.you.healCD - 1,\r\n            powerCD: state.you.powerCD - 1,\r\n            armorCD: state.you.armorCD - 1\r\n          },\r\n            enemy: {\r\n              ...state.enemy,\r\n              // in the turn when power up ends change your attack\r\n            hp: (() => {\r\n              if (state.you.powerCD === powerDuration) {return state.enemy.hp - yourAttack + powerBonus}\r\n              else {return state.enemy.hp - yourAttack}\r\n            })(),\r\n            wound: (() => {\r\n              if (state.you.powerCD === powerDuration) {return yourAttack - powerBonus}\r\n              else {return yourAttack}\r\n            })()\r\n          }} }         \r\n    // Thunder strike mechanic\r\n    if (action.type === 'THUNDER') {\r\n        return {\r\n            turn: state.turn + 1,\r\n            you: {\r\n              ...state.you,\r\n              hp: (() => {\r\n                if (state.you.armorCD === armorDuration) {return state.you.hp - enemyAttack - armorBonus}\r\n                else {return state.you.hp - enemyAttack}\r\n              })(),\r\n              armor: (() => {\r\n                if (state.you.armorCD === armorDuration) {return initState.you.armor}\r\n                else {return state.you.armor}\r\n              })(),\r\n              wound: (() => {\r\n                if (state.you.armorCD === armorDuration) {return enemyAttack + armorBonus}\r\n                else {return enemyAttack}\r\n              })(),\r\n              power: (() => {\r\n                if (state.you.powerCD === powerDuration) {return initState.you.power}\r\n                else {return state.you.power}\r\n              })(),\r\n            thunderCD: thunderTimeOut,\r\n            healCD: state.you.healCD - 1,\r\n            powerCD: state.you.powerCD - 1,\r\n            armorCD: state.you.armorCD - 1\r\n          },\r\n            enemy: {\r\n              ...state.enemy,\r\n              hp: (() => {\r\n                if (state.you.powerCD === powerDuration) {return state.enemy.hp - thunderAttack + \r\n                  (yourAttack + state.enemy.armor - powerBonus) * 4 - state.enemy.armor}\r\n                else {return state.enemy.hp - thunderAttack}\r\n              })(),\r\n              wound: (() => {\r\n                if (state.you.powerCD === powerDuration) {return thunderAttack - \r\n                  (yourAttack + state.enemy.armor - powerBonus) * 4 - state.enemy.armor}\r\n                else {return thunderAttack}\r\n              })()\r\n          }}\r\n    }\r\n    // Healing mechanic\r\n    if (action.type === 'HEAL') {\r\n        return {\r\n            turn: state.turn + 1,\r\n            you: {\r\n              ...state.you,\r\n              // Preventing heal over max hp\r\n            hp: (() => {\r\n              if (state.you.powerCD === powerDuration) {\r\n                  if (state.you.hp - enemyAttack + (yourHeal-powerBonus)*healMultiplier >= initState.you.hp) {return initState.you.hp}\r\n                  else {return state.you.hp - enemyAttack + (yourHeal-powerBonus)*healMultiplier} }\r\n\r\n              else if (state.you.armorCD === armorDuration) {\r\n                if (state.you.hp - enemyAttack - armorBonus + (yourHeal)*healMultiplier >= initState.you.hp) {return initState.you.hp}\r\n                else {return state.you.hp - enemyAttack - armorBonus + (yourHeal)*healMultiplier} }\r\n\r\n              else {\r\n                  if (state.you.hp - enemyAttack + yourHeal*healMultiplier >= initState.you.hp) {return initState.you.hp}\r\n                  else {return state.you.hp - enemyAttack + yourHeal*healMultiplier}\r\n               } \r\n            })(),\r\n            power: (() => {\r\n              if (state.you.powerCD === powerDuration) {return initState.you.power}\r\n              else {return state.you.power}\r\n            })(),\r\n            armor: (() => {\r\n              if (state.you.armorCD === armorDuration) {return initState.you.armor}\r\n              else {return state.you.armor}\r\n            })(),\r\n            wound: (() => {\r\n              if (state.you.armorCD === armorDuration) {return enemyAttack + armorBonus  - yourHeal*healMultiplier}\r\n              else if (state.you.powerCD === powerDuration) {return enemyAttack - (yourHeal-powerBonus)*healMultiplier}\r\n              else {return enemyAttack  - yourHeal*healMultiplier}\r\n            })(),\r\n            healCD: healTimeOut,\r\n            thunderCD: state.you.thunderCD - 1,\r\n            powerCD: state.you.powerCD - 1,\r\n            armorCD: state.you.armorCD - 1\r\n          },\r\n            enemy: {\r\n              ...state.enemy,\r\n            wound: 0\r\n          }}\r\n    }\r\n    // Armor up\r\n    if (action.type === 'ARMOR') {\r\n      return {\r\n        turn: state.turn + 1,\r\n        you: {\r\n          ...state.you,\r\n        armor: state.you.armor + armorBonus,\r\n        power: (() => {\r\n          if (state.you.powerCD === powerDuration) {return initState.you.power}\r\n          else {return state.you.power}\r\n        })(),\r\n        hp: state.you.hp - enemyAttack + armorBonus,\r\n        wound: enemyAttack - armorBonus,\r\n        armorCD: armorTimeOut,\r\n        thunderCD: state.you.thunderCD - 1,\r\n        powerCD: state.you.powerCD - 1,\r\n        healCD: state.you.healCD - 1\r\n      },\r\n        enemy: {\r\n          ...state.enemy,\r\n        wound: 0\r\n      }}\r\n    }\r\n    // power up\r\n    if (action.type === 'POWER') {\r\n      return {\r\n        turn: state.turn + 1,\r\n        you: {\r\n          ...state.you,\r\n          hp: (() => {\r\n            if (state.you.armorCD === armorDuration) {return state.you.hp - enemyAttack - armorBonus}\r\n            else {return state.you.hp - enemyAttack}\r\n          })(),\r\n          armor: (() => {\r\n            if (state.you.armorCD === armorDuration) {return initState.you.armor}\r\n            else {return state.you.armor}\r\n          })(),\r\n          wound: (() => {\r\n            if (state.you.armorCD === armorDuration) {return enemyAttack + armorBonus}\r\n            else {return enemyAttack}\r\n          })(),\r\n        power: state.you.power + powerBonus,\r\n        powerCD: powerTimeOut,\r\n        armorCD: state.you.armorCD - 1,\r\n        thunderCD: state.you.thunderCD - 1,\r\n        healCD: state.you.healCD - 1\r\n      },\r\n        enemy: {\r\n          ...state.enemy,\r\n        wound: 0\r\n      }}\r\n    }\r\n    // RESTART button will refresh page\r\n    if (action.type === 'RESTART') {\r\n        document.location.reload()\r\n    }\r\n return state\r\n}\r\n\r\nexport default reducer\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport {createStore} from 'redux'\nimport {Provider} from 'react-redux'\nimport reducer from './reducers/reducer'\n\nconst state = createStore(reducer)\n\nReactDOM.render(<Provider store={state}>\n    <App />\n    </Provider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}