{"version":3,"sources":["App.js","serviceWorker.js","reducers/reducer.js","index.js"],"names":["connect","state","dispatch","classHandler","event","document","querySelector","style","display","type","payload","target","innerHTML","toLowerCase","attackHandler","restartHandler","thunderHandler","armorHandler","healHandler","powerHandler","props","react_default","a","createElement","className","onClick","textAlign","you","hp","enemy","concat","class","wound","color","armor","armorCD","power","powerCD","title","disabled","thunderCD","healCD","Boolean","window","location","hostname","match","initState","turn","reducer","arguments","length","undefined","action","minEnemyAttack","maxEnemyAttack","minYouAttack","maxYouAttack","attackRandom","min","max","Math","round","random","yourAttack","enemyAttack","yourHeal","thunderAttack","Object","objectSpread","createStore","ReactDOM","render","es","store","src_App","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"oMAyHeA,qBAvBS,SAACC,GACvB,OAAOA,GAGkB,SAACC,GAC1B,MAAO,CACLC,aAAc,SAACC,GAGb,OAFAC,SAASC,cAAc,UAAUC,MAAMC,QAAU,OACjDH,SAASC,cAAc,SAASC,MAAMC,QAAU,QACzCN,EAAS,CAACO,KAAM,QAASC,QAASN,EAAMO,OAAOC,UAAUC,iBAElEC,cAAe,kBAAMZ,EAAS,CAACO,KAAM,YACrCM,eAAgB,WAGd,OAFAV,SAASC,cAAc,UAAUC,MAAMC,QAAU,QACjDH,SAASC,cAAc,SAASC,MAAMC,QAAU,OACzCN,EAAS,CAACO,KAAM,aACzBO,eAAgB,kBAAMd,EAAS,CAACO,KAAM,aACtCQ,aAAc,kBAAMf,EAAS,CAACO,KAAM,WACpCS,YAAa,kBAAMhB,EAAS,CAACO,KAAM,UACnCU,aAAc,kBAAMjB,EAAS,CAACO,KAAM,aAIzBT,CAnHH,SAACoB,GAGT,OAAOC,EAAAC,EAAAC,cAAA,eACLF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACbH,EAAAC,EAAAC,cAAA,6BACAF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBAGbH,EAAAC,EAAAC,cAAA,WAAKF,EAAAC,EAAAC,cAAA,OAAKC,UAAW,qBACvBH,EAAAC,EAAAC,cAAA,UAAQE,QAASL,EAAMjB,cAAvB,QACAkB,EAAAC,EAAAC,cAAA,8BAGAF,EAAAC,EAAAC,cAAA,WAAKF,EAAAC,EAAAC,cAAA,OAAKC,UAAW,qBACbH,EAAAC,EAAAC,cAAA,UAAQE,QAASL,EAAMjB,cAAvB,QACAkB,EAAAC,EAAAC,cAAA,kDAERF,EAAAC,EAAAC,cAAA,WAAKF,EAAAC,EAAAC,cAAA,OAAKC,UAAW,wBACrBH,EAAAC,EAAAC,cAAA,UAAQE,QAASL,EAAMjB,cAAvB,WACAkB,EAAAC,EAAAC,cAAA,+CAIFF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OAAOjB,MAAO,CAACmB,UAAW,SAC1BlB,QAAS,SACtBY,EAAMO,IAAIC,GAAK,GAAKR,EAAMS,MAAMD,GAAK,GAAMP,EAAAC,EAAAC,cAAA,WAC3CF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAS,eAAAM,OAAiBV,EAAMW,SACrCV,EAAAC,EAAAC,cAAA,SAAGF,EAAAC,EAAAC,cAAA,kBACPF,EAAAC,EAAAC,cAAA,mBAAUF,EAAAC,EAAAC,cAAA,WAAV,IAAoBF,EAAAC,EAAAC,cAAA,SAAIH,EAAMO,IAAIC,IAAlC,IAA0CP,EAAAC,EAAAC,cAAA,QACxChB,MAAQa,EAAMO,IAAIK,MAAQ,EAAK,CAACC,MAAO,OAAS,CAACA,MAAO,UAChC,IAApBb,EAAMO,IAAIK,OAAgBX,EAAAC,EAAAC,cAAA,SAAKH,EAAMO,IAAIK,MAAQ,GAAMZ,EAAMO,IAAIK,MAAnC,IAAAF,QAAgDV,EAAMO,IAAIK,UAE9FX,EAAAC,EAAAC,cAAA,kBACQF,EAAAC,EAAAC,cAAA,WADR,IACkBF,EAAAC,EAAAC,cAAA,YAAAO,OAAOV,EAAMO,IAAIO,MAAjB,MACZd,EAAMO,IAAIQ,SAAW,EAAKd,EAAAC,EAAAC,cAAA,KAAGQ,MAAM,2BAAgC,MAGzEV,EAAAC,EAAAC,cAAA,kBACSF,EAAAC,EAAAC,cAAA,WADT,IACmBF,EAAAC,EAAAC,cAAA,YAAAO,OAAOV,EAAMO,IAAIS,MAAjB,OACXhB,EAAMO,IAAIU,SAAW,EAAKhB,EAAAC,EAAAC,cAAA,KAAGQ,MAAM,2BAAgC,OAK3EV,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACjBH,EAAAC,EAAAC,cAAA,SAAGF,EAAAC,EAAAC,cAAA,oBACLF,EAAAC,EAAAC,cAAA,mBAAUF,EAAAC,EAAAC,cAAA,WAAV,IAAoBF,EAAAC,EAAAC,cAAA,SAAIH,EAAMS,MAAMD,IAApC,IAA4CP,EAAAC,EAAAC,cAAA,QAC1ChB,MAAO,CAAC0B,MAAO,QAAgC,IAAtBb,EAAMS,MAAMG,OAAgBX,EAAAC,EAAAC,cAAA,UAAKH,EAAMS,MAAMG,SACxEX,EAAAC,EAAAC,cAAA,kBAASF,EAAAC,EAAAC,cAAA,WAAT,IAAmBF,EAAAC,EAAAC,cAAA,SAAIH,EAAMS,MAAMK,QACnCb,EAAAC,EAAAC,cAAA,kBAASF,EAAAC,EAAAC,cAAA,WAAT,IAAmBF,EAAAC,EAAAC,cAAA,SAAIH,EAAMS,MAAMO,UAInCf,EAAAC,EAAAC,cAAA,UAAQe,MAAM,oBAAoBd,UAAU,SAASC,QAASL,EAAMN,eAApE,UAEAO,EAAAC,EAAAC,cAAA,UAAQe,MAAM,iCAAiCd,UAAU,SAASC,QAASL,EAAMJ,eAAgBuB,WAAWnB,EAAMO,IAAIa,WAAa,IAAnI,iBACkBpB,EAAMO,IAAIa,UAAY,GAAMnB,EAAAC,EAAAC,cAAA,gBAAQH,EAAMO,IAAIa,UAAlB,MAE9CnB,EAAAC,EAAAC,cAAA,UAAQe,MAAM,uBAAuBd,UAAU,SAASC,QAASL,EAAMF,YAAaqB,WAAWnB,EAAMO,IAAIc,QAAU,GAClHlC,MAAuB,SAAhBa,EAAMW,MAAmB,CAACvB,QAAS,QAAU,MADrD,WAEYY,EAAMO,IAAIc,OAAS,GAAMpB,EAAAC,EAAAC,cAAA,gBAAQH,EAAMO,IAAIc,OAAlB,MAErCpB,EAAAC,EAAAC,cAAA,UAAQe,MAAM,0BAA0Bd,UAAU,SAASC,QAASL,EAAMD,aAC1EoB,WAAWnB,EAAMO,IAAIU,SAAW,GAChC9B,MAAuB,SAAhBa,EAAMW,MAAmB,CAACvB,QAAS,QAAU,MAFpD,YAGaY,EAAMO,IAAIU,QAAU,GAAMhB,EAAAC,EAAAC,cAAA,gBAAQH,EAAMO,IAAIU,QAAlB,MAEvChB,EAAAC,EAAAC,cAAA,UAAQe,MAAM,0BAA0Bd,UAAU,SAASC,QAASL,EAAMH,aAC1EsB,WAAWnB,EAAMO,IAAIQ,SAAW,GAChC5B,MAAuB,YAAhBa,EAAMW,MAAsB,CAACvB,QAAS,QAAU,MAFvD,YAGWY,EAAMO,IAAIQ,QAAU,GAAMd,EAAAC,EAAAC,cAAA,gBAAQH,EAAMO,IAAIQ,QAAlB,OAItCf,EAAMS,MAAMD,IAAM,GAAKR,EAAMO,IAAIC,IAAM,GAAMP,EAAAC,EAAAC,cAAA,KAAGC,UAAU,UAAb,QAA2BH,EAAAC,EAAAC,cAAA,WAAKF,EAAAC,EAAAC,cAAA,QAAMC,UAAU,QAAhB,mCAE5EJ,EAAMO,IAAIC,IAAM,GAAKR,EAAMS,MAAMD,GAAK,GAAMP,EAAAC,EAAAC,cAAA,KAAGC,UAAU,UAAb,YAA+BH,EAAAC,EAAAC,cAAA,WAAKF,EAAAC,EAAAC,cAAA,QAAMC,UAAU,QAAhB,8CAEhFJ,EAAMS,MAAMD,IAAM,GAAKR,EAAMO,IAAIC,GAAK,GAAMP,EAAAC,EAAAC,cAAA,KAAGC,UAAU,UAAb,WAA8BH,EAAAC,EAAAC,cAAA,WAAKF,EAAAC,EAAAC,cAAA,QAAMC,UAAU,QAAhB,wCAGjFH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,wBAAwBC,QAASL,EAAML,gBAAzD,gBC/Ec2B,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,6ECjBAC,EAAY,CACdhB,MAAO,OACPiB,KAAM,EACNrB,IAAK,CACHC,GAAI,KACJQ,MAAO,IACPF,MAAO,GACPF,MAAO,EACPQ,UAAW,EACXC,OAAQ,EACRN,QAAS,EACTE,QAAS,GAEXR,MAAO,CACLD,GAAI,KACJQ,MAAO,IACPF,MAAO,GACPF,MAAO,IAkMEiB,EA9LC,WAA+B,IAA9BhD,EAA8BiD,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAtBH,EAAWM,EAAWH,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAErCE,EAAqC,GAApBrD,EAAM4B,MAAMO,MAC7BmB,EAAqC,IAApBtD,EAAM4B,MAAMO,MAC7BoB,EAAiC,GAAlBvD,EAAM0B,IAAIS,MACzBqB,EAAiC,IAAlBxD,EAAM0B,IAAIS,MACzBsB,EAAe,SAACC,EAAKC,GACvB,OAAOC,KAAKC,MAAMD,KAAKE,UAAYH,EAAMD,EAAM,IAAOA,GAGpDK,EAAaN,EAAaF,EAAcC,GAAgBxD,EAAM4B,MAAMK,MACpE+B,EAAcP,EAAaJ,EAAgBC,GAAkBtD,EAAM0B,IAAIO,MAEvEgC,EAAWR,EAAaF,EAAcC,GAMtCU,EADoB,GACHH,EAAa/D,EAAM4B,MAAMK,OAA6BjC,EAAM4B,MAAMK,MAUzF,MAAoB,UAAhBmB,EAAO5C,KACF2D,OAAAC,EAAA,EAAAD,CAAA,GACFnE,EADL,CAEE8B,MAAOsB,EAAO3C,UAIE,WAAhB2C,EAAO5C,KAKI2D,OAAAC,EAAA,EAAAD,CAAA,GACJnE,EADH,CAEA+C,KAAM/C,EAAM+C,KAAO,EACnBrB,IAAIyC,OAAAC,EAAA,EAAAD,CAAA,GACCnE,EAAM0B,IADR,CAIHC,GAzBc,IA0BR3B,EAAM0B,IAAIQ,QAAmClC,EAAM0B,IAAIC,GAAKqC,EA3BvD,GA4BIhE,EAAM0B,IAAIC,GAAKqC,EAE9B/B,MA7Bc,IA8BRjC,EAAM0B,IAAIQ,QAAmCY,EAAUpB,IAAIO,MAClDjC,EAAM0B,IAAIO,MAEzBF,MAjCc,IAkCR/B,EAAM0B,IAAIQ,QAAmC8B,EAnCxC,GAoCIA,EAGf7B,MAnCc,IAoCRnC,EAAM0B,IAAIU,QAAmCU,EAAUpB,IAAIS,MAClDnC,EAAM0B,IAAIS,MAEzBI,UAAWvC,EAAM0B,IAAIa,UAAY,EACjCC,OAAQxC,EAAM0B,IAAIc,OAAS,EAC3BJ,QAASpC,EAAM0B,IAAIU,QAAU,EAC7BF,QAASlC,EAAM0B,IAAIQ,QAAU,IAE7BN,MAAMuC,OAAAC,EAAA,EAAAD,CAAA,GACDnE,EAAM4B,MADN,CAGLD,GA/Cc,IAgDR3B,EAAM0B,IAAIU,QAAmCpC,EAAM4B,MAAMD,GAAKoC,EAjDzD,GAkDI/D,EAAM4B,MAAMD,GAAKoC,EAEhChC,MAnDc,IAoDR/B,EAAM0B,IAAIU,QAAmC2B,EArDxC,GAsDIA,MAIH,YAAhBX,EAAO5C,KACA2D,OAAAC,EAAA,EAAAD,CAAA,GACFnE,EADL,CAEI+C,KAAM/C,EAAM+C,KAAO,EACnBrB,IAAIyC,OAAAC,EAAA,EAAAD,CAAA,GACCnE,EAAM0B,IADR,CAEDC,GAlEY,IAmEN3B,EAAM0B,IAAIQ,QAAmClC,EAAM0B,IAAIC,GAAKqC,EApEzD,GAqEMhE,EAAM0B,IAAIC,GAAKqC,EAE9B/B,MAtEY,IAuENjC,EAAM0B,IAAIQ,QAAmCY,EAAUpB,IAAIO,MAClDjC,EAAM0B,IAAIO,MAEzBF,MA1EY,IA2EN/B,EAAM0B,IAAIQ,QAAmC8B,EA5E1C,GA6EMA,EAEf7B,MA3EY,IA4ENnC,EAAM0B,IAAIU,QAAmCU,EAAUpB,IAAIS,MAClDnC,EAAM0B,IAAIS,MAE3BI,UArFe,EAsFfC,OAAQxC,EAAM0B,IAAIc,OAAS,EAC3BJ,QAASpC,EAAM0B,IAAIU,QAAU,EAC7BF,QAASlC,EAAM0B,IAAIQ,QAAU,IAE7BN,MAAMuC,OAAAC,EAAA,EAAAD,CAAA,GACDnE,EAAM4B,MADN,CAEHD,GAtFY,IAuFN3B,EAAM0B,IAAIU,QAAmCpC,EAAM4B,MAAMD,GAAKuC,EAChB,GAA/CH,EAAa/D,EAAM4B,MAAMK,MAzFrB,IAyF+CjC,EAAM4B,MAAMK,MACrDjC,EAAM4B,MAAMD,GAAKuC,EAEhCnC,MA3FY,IA4FN/B,EAAM0B,IAAIU,QAAmC8B,EACC,GAA/CH,EAAa/D,EAAM4B,MAAMK,MA9FrB,IA8F+CjC,EAAM4B,MAAMK,MACrDiC,MAKL,SAAhBd,EAAO5C,KACA2D,OAAAC,EAAA,EAAAD,CAAA,GACFnE,EADL,CAEI+C,KAAM/C,EAAM+C,KAAO,EACnBrB,IAAIyC,OAAAC,EAAA,EAAAD,CAAA,GACCnE,EAAM0B,IADR,CAGHC,GACU3B,EAAM0B,IAAIC,GAAKqC,EAtHV,EAsHwBC,GAA2BnB,EAAUpB,IAAIC,GAAYmB,EAAUpB,IAAIC,GACvF3B,EAAM0B,IAAIC,GAAKqC,EAvHnB,EAuHiCC,EAGhDlC,MAAOiC,EA1HQ,EA0HOC,EACtBzB,OA1HY,EA2HZD,UAAWvC,EAAM0B,IAAIa,UAAY,IAEjCX,MAAMuC,OAAAC,EAAA,EAAAD,CAAA,GACDnE,EAAM4B,MADN,CAELG,MAAO,MAIK,UAAhBqB,EAAO5C,KACF2D,OAAAC,EAAA,EAAAD,CAAA,GACFnE,EADL,CAEE+C,KAAM/C,EAAM+C,KAAO,EACnBrB,IAAIyC,OAAAC,EAAA,EAAAD,CAAA,GACCnE,EAAM0B,IADR,CAEHO,MAAOjC,EAAM0B,IAAIO,MAnIF,GAqIfN,GAAI3B,EAAM0B,IAAIC,GAAKqC,EArIJ,GAsIfjC,MAAOiC,EAtIQ,GAuIf9B,QArIiB,GAsIjBK,UAAWvC,EAAM0B,IAAIa,UAAY,IAEjCX,MAAMuC,OAAAC,EAAA,EAAAD,CAAA,GACDnE,EAAM4B,MADN,CAELG,MAAO,MAIS,UAAhBqB,EAAO5C,KACF2D,OAAAC,EAAA,EAAAD,CAAA,GACFnE,EADL,CAEE+C,KAAM/C,EAAM+C,KAAO,EACnBrB,IAAIyC,OAAAC,EAAA,EAAAD,CAAA,GACCnE,EAAM0B,IADR,CAEDC,GAAI3B,EAAM0B,IAAIC,GAAKqC,EACnBjC,MAAOiC,EACT7B,MAAOnC,EAAM0B,IAAIS,MArJF,GAsJfC,QApJiB,GAqJjBG,UAAWvC,EAAM0B,IAAIa,UAAY,IAEjCX,MAAMuC,OAAAC,EAAA,EAAAD,CAAA,GACDnE,EAAM4B,MADN,CAELG,MAAO,MAIS,YAAhBqB,EAAO5C,KACFsC,EAEL9C,GCvMFA,EAAQqE,YAAYrB,GAE1BsB,IAASC,OAAOnD,EAAAC,EAAAC,cAACkD,EAAA,EAAD,CAAUC,MAAOzE,GAC7BoB,EAAAC,EAAAC,cAACoD,EAAD,OACatE,SAASuE,eAAe,SFmHnC,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.23b6bbc9.chunk.js","sourcesContent":["import React from 'react';\n\nimport {connect} from 'react-redux';\n\nimport './styles/style.scss';\n\nconst App = (props) => {\n  // Displaying stats while HP != 0 and fight result when HP < 0\n  // also signaling when buffs are active\n    return <section>\n      <div className='class'>\n        <h2>Choose a class:</h2>\n        <div className='class-container'>\n\n              \n          <div><div className={'player-icon monk'}></div>\n        <button onClick={props.classHandler}>Monk</button>\n        <p>Can heal himself</p></div>\n        \n\n        <div><div className={'player-icon mage'}></div>\n                <button onClick={props.classHandler}>Mage</button>\n                <p>Can temporary boost his attack power</p></div> \n          \n        <div><div className={'player-icon warrior'}></div>\n        <button onClick={props.classHandler}>Warrior</button>\n        <p>Can temporary boost his defence</p></div>\n        </div>\n      </div>\n\n      <div className='game' style={{textAlign: 'center',\n                     display: 'none'}}>\n      {(props.you.hp > 0 && props.enemy.hp > 0) && <div>\n        <div className='flex'>\n          <div className='player'>\n            <div className={`player-icon ${props.class}`}></div>\n            <p><b>You:</b></p>\n        <p>Health:<br></br> <b>{props.you.hp}</b> <span\n          style={(props.you.wound > 0) ? {color: 'red'} : {color: 'green'}}>\n            {(props.you.wound !== 0) && <b>{(props.you.wound > 0) ? -props.you.wound : `+${-props.you.wound}`}</b>}</span></p>\n\n        <p>\n          Armor:<br></br> <b>{`${props.you.armor} `}</b>\n            {(props.you.armorCD >= 5) ? <i class=\"fas fa-angle-double-up\"></i> : null}\n           </p>\n\n        <p>\n           Power:<br></br> <b>{`${props.you.power}  `}</b> \n              {(props.you.powerCD >= 5) ? <i class=\"fas fa-angle-double-up\"></i> : null}\n              </p></div>\n\n       \n\n        <div className='player'>\n            <div className='enemy-icon'></div>\n          <p><b>Enemy:</b></p>\n        <p>Health:<br></br> <b>{props.enemy.hp}</b> <span \n          style={{color: 'red'}}>{(props.enemy.wound !== 0) && <b>{-props.enemy.wound}</b>}</span></p>\n        <p>Armor:<br></br> <b>{props.enemy.armor}</b></p>\n        <p>Power:<br></br> <b>{props.enemy.power}</b></p></div>\n        </div> \n        \n\n        <button title='Your basic attack' className='button' onClick={props.attackHandler}>Attack</button>\n\n        <button title='Deals massive amount of damage' className='button' onClick={props.thunderHandler} disabled={(props.you.thunderCD <= 0) ? false : true}>\n          Crushing Blow {(props.you.thunderCD > 0) && <span>({props.you.thunderCD})</span>}</button>\n\n        <button title='Heals your character' className='button' onClick={props.healHandler} disabled={(props.you.healCD <= 0) ? false : true}\n         style={props.class !== 'monk' ? {display: 'none'} : null}>\n          Heal Up {(props.you.healCD > 0) && <span>({props.you.healCD})</span>}</button>\n\n        <button title='Power boost for 5 turns' className='button' onClick={props.powerHandler} \n        disabled={(props.you.powerCD <= 0) ? false : true} \n        style={props.class !== 'mage' ? {display: 'none'} : null}>\n          Power Up {(props.you.powerCD > 0) && <span>({props.you.powerCD})</span>}</button>\n\n        <button title='Armor boost for 5 turns' className='button' onClick={props.armorHandler} \n        disabled={(props.you.armorCD <= 0) ? false : true}\n        style={props.class !== 'warrior' ? {display: 'none'} : null}>\n        Armor Up {(props.you.armorCD > 0) && <span>({props.you.armorCD})</span> }</button>\n      </div>}\n\n\n     {(props.enemy.hp <= 0 && props.you.hp <= 0) && <p className='result'>Draw <br/><span className='hint'>\n        Almost won. Want to try again?</span></p>} \n      {(props.you.hp <= 0 && props.enemy.hp > 0) && <p className='result'>You lost <br/><span className='hint'>\n        Next time try to use abilities more often</span></p>}\n      {(props.enemy.hp <= 0 && props.you.hp > 0) && <p className='result'>You won <br/><span className='hint'>\n        Looks like we have a God Gamer here</span></p>}\n    \n      <button className='button button-restart' onClick={props.restartHandler}>Restart</button>\n\n\n      </div>\n    </section>\n}\n\nconst mapStateToProps = (state) => {\n  return state\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    classHandler: (event) => {\n      document.querySelector('.class').style.display = 'none'\n      document.querySelector('.game').style.display = 'block'\n      return dispatch({type: 'CLASS', payload: event.target.innerHTML.toLowerCase()})\n    },\n    attackHandler: () => dispatch({type: 'ATTACK'}),\n    restartHandler: () => {\n      document.querySelector('.class').style.display = 'block'\n      document.querySelector('.game').style.display = 'none'\n      return dispatch({type: 'RESTART'})},\n    thunderHandler: () => dispatch({type: 'THUNDER'}),\n    armorHandler: () => dispatch({type: 'ARMOR'}),\n    healHandler: () => dispatch({type: 'HEAL'}),\n    powerHandler: () => dispatch({type: 'POWER'})\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","// Characters stats\r\nconst initState = {\r\n    class: 'monk',\r\n    turn: 0,\r\n    you: {\r\n      hp: 1500,\r\n      power: 100,\r\n      armor: 10,\r\n      wound: 0,\r\n      thunderCD: 0,\r\n      healCD: 0,\r\n      armorCD: 0,\r\n      powerCD: 0\r\n    },\r\n    enemy: {\r\n      hp: 2500,\r\n      power: 120,\r\n      armor: 40,\r\n      wound: 0\r\n    }\r\n  }\r\n\r\nconst reducer = (state = initState, action) => {\r\n    // Randomazing attack\r\n    const minEnemyAttack = state.enemy.power * 0.9;\r\n    const maxEnemyAttack = state.enemy.power * 1.1;\r\n    const minYouAttack = state.you.power * 0.9;\r\n    const maxYouAttack = state.you.power * 1.1;\r\n    const attackRandom = (min, max) => {\r\n        return Math.round(Math.random() * (max - min + 1) ) + min;\r\n      }\r\n      // Calculating damage reduction by armor\r\n    const yourAttack = attackRandom(minYouAttack, maxYouAttack) - state.enemy.armor;\r\n    const enemyAttack = attackRandom(minEnemyAttack, maxEnemyAttack) - state.you.armor;\r\n\r\n    const yourHeal = attackRandom(minYouAttack, maxYouAttack);\r\n    // here you can change ballance of your abilities\r\n    const healMultiplier = 3;\r\n    const healTimeOut = 6;\r\n\r\n    const thunderMultiplier = 4;\r\n    const thunderAttack = (yourAttack + state.enemy.armor) * thunderMultiplier - state.enemy.armor;\r\n    const thunderTimeOut = 3;\r\n\r\n    const armorBonus = 70;\r\n    const armorDuration = 5;\r\n    const armorTimeOut = 10;\r\n    const powerBonus = 90;\r\n    const powerDuration = 5;\r\n    const powerTimeOut = 10;\r\n\r\n    if (action.type === 'CLASS') {\r\n      return {\r\n        ...state,\r\n        class: action.payload\r\n      }\r\n    }\r\n\r\n    if (action.type === 'ATTACK') {\r\n          // Changing HP of characters and writing wounds they got\r\n          // attack decrease abilities CDs by 1 (if CD <= 0 you can use it again)\r\n          // when using some ability it also decrease CD of other abilities by 1\r\n            // Basic attack\r\n            return {\r\n            ...state,\r\n            turn: state.turn + 1,\r\n            you: {\r\n              ...state.you,\r\n              // Returning initial armor after 5 turns\r\n              // in the turn when armor up ends change your armor              \r\n            hp: (() => {\r\n              if (state.you.armorCD === armorDuration) {return state.you.hp - enemyAttack - armorBonus}\r\n              else {return state.you.hp - enemyAttack}\r\n            })(),\r\n            armor: (() => {\r\n              if (state.you.armorCD === armorDuration) {return initState.you.armor}\r\n              else {return state.you.armor}\r\n            })(),\r\n            wound: (() => {\r\n              if (state.you.armorCD === armorDuration) {return enemyAttack + armorBonus}\r\n              else {return enemyAttack}\r\n            })(),\r\n            // Returning initial power after 5 turns\r\n            power: (() => {\r\n              if (state.you.powerCD === powerDuration) {return initState.you.power}\r\n              else {return state.you.power}\r\n            })(),\r\n            thunderCD: state.you.thunderCD - 1,\r\n            healCD: state.you.healCD - 1,\r\n            powerCD: state.you.powerCD - 1,\r\n            armorCD: state.you.armorCD - 1\r\n          },\r\n            enemy: {\r\n              ...state.enemy,\r\n              // in the turn when power up ends change your attack\r\n            hp: (() => {\r\n              if (state.you.powerCD === powerDuration) {return state.enemy.hp - yourAttack + powerBonus}\r\n              else {return state.enemy.hp - yourAttack}\r\n            })(),\r\n            wound: (() => {\r\n              if (state.you.powerCD === powerDuration) {return yourAttack - powerBonus}\r\n              else {return yourAttack}\r\n            })()\r\n          }} }         \r\n    // Thunder strike mechanic\r\n    if (action.type === 'THUNDER') {\r\n        return {\r\n          ...state,\r\n            turn: state.turn + 1,\r\n            you: {\r\n              ...state.you,\r\n              hp: (() => {\r\n                if (state.you.armorCD === armorDuration) {return state.you.hp - enemyAttack - armorBonus}\r\n                else {return state.you.hp - enemyAttack}\r\n              })(),\r\n              armor: (() => {\r\n                if (state.you.armorCD === armorDuration) {return initState.you.armor}\r\n                else {return state.you.armor}\r\n              })(),\r\n              wound: (() => {\r\n                if (state.you.armorCD === armorDuration) {return enemyAttack + armorBonus}\r\n                else {return enemyAttack}\r\n              })(),\r\n              power: (() => {\r\n                if (state.you.powerCD === powerDuration) {return initState.you.power}\r\n                else {return state.you.power}\r\n              })(),\r\n            thunderCD: thunderTimeOut,\r\n            healCD: state.you.healCD - 1,\r\n            powerCD: state.you.powerCD - 1,\r\n            armorCD: state.you.armorCD - 1\r\n          },\r\n            enemy: {\r\n              ...state.enemy,\r\n              hp: (() => {\r\n                if (state.you.powerCD === powerDuration) {return state.enemy.hp - thunderAttack + \r\n                  (yourAttack + state.enemy.armor - powerBonus) * 4 - state.enemy.armor}\r\n                else {return state.enemy.hp - thunderAttack}\r\n              })(),\r\n              wound: (() => {\r\n                if (state.you.powerCD === powerDuration) {return thunderAttack - \r\n                  (yourAttack + state.enemy.armor - powerBonus) * 4 - state.enemy.armor}\r\n                else {return thunderAttack}\r\n              })()\r\n          }}\r\n    }\r\n    // Healing mechanic\r\n    if (action.type === 'HEAL') {\r\n        return {\r\n          ...state,\r\n            turn: state.turn + 1,\r\n            you: {\r\n              ...state.you,\r\n              // Preventing heal over max hp\r\n            hp: (() => {\r\n                  if (state.you.hp - enemyAttack + yourHeal*healMultiplier >= initState.you.hp) {return initState.you.hp}\r\n                  else {return state.you.hp - enemyAttack + yourHeal*healMultiplier}\r\n                  })(),\r\n\r\n            wound: enemyAttack  - yourHeal*healMultiplier,\r\n            healCD: healTimeOut,\r\n            thunderCD: state.you.thunderCD - 1\r\n          },\r\n            enemy: {\r\n              ...state.enemy,\r\n            wound: 0\r\n          }}\r\n    }\r\n    // Armor up\r\n    if (action.type === 'ARMOR') {\r\n      return {\r\n        ...state,\r\n        turn: state.turn + 1,\r\n        you: {\r\n          ...state.you,\r\n        armor: state.you.armor + armorBonus,\r\n        \r\n        hp: state.you.hp - enemyAttack + armorBonus,\r\n        wound: enemyAttack - armorBonus,\r\n        armorCD: armorTimeOut,\r\n        thunderCD: state.you.thunderCD - 1\r\n      },\r\n        enemy: {\r\n          ...state.enemy,\r\n        wound: 0\r\n      }}\r\n    }\r\n    // power up\r\n    if (action.type === 'POWER') {\r\n      return {\r\n        ...state,\r\n        turn: state.turn + 1,\r\n        you: {\r\n          ...state.you,\r\n          hp: state.you.hp - enemyAttack,\r\n          wound: enemyAttack,\r\n        power: state.you.power + powerBonus,\r\n        powerCD: powerTimeOut,\r\n        thunderCD: state.you.thunderCD - 1\r\n      },\r\n        enemy: {\r\n          ...state.enemy,\r\n        wound: 0\r\n      }}\r\n    }\r\n    // RESTART button will refresh page\r\n    if (action.type === 'RESTART') {\r\n      return initState\r\n    }\r\n return state\r\n}\r\n\r\nexport default reducer\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport {createStore} from 'redux'\nimport {Provider} from 'react-redux'\nimport reducer from './reducers/reducer'\n\nconst state = createStore(reducer)\n\nReactDOM.render(<Provider store={state}>\n    <App />\n    </Provider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}